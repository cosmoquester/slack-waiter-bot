version: 2.1

executors:
  go-executor:
    working_directory: ~/slack-waiter-bot
    docker:
      - image: circleci/golang:1.16

commands:
  install-modules:
    steps:
      - checkout

      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Go module & linter download
          command: |
            go mod download
            go get -u golang.org/x/lint/golint

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

jobs:
  build:
    executor: go-executor

    steps:
      - install-modules

      - run:
          name: Build Application
          command: go build

  check-linting:
    executor: go-executor

    steps:
      - install-modules

      - run:
          name: Check Linting
          command: |
            [[ -z $(go fmt ./...) ]] && true || false
            go vet ./...
            golint -set_exit_status ./...

  run-test:
    executor: go-executor

    steps:
      - install-modules

      - run:
          name: Run tests and coverage
          command: go test ./... -race -coverprofile=coverage.out -covermode=atomic

      - run:
          name: Upload coverage to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  docker-image-build:
    executor: go-executor

    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.6

      - when:
          condition:
            equal: [ master, << pipeline.git.branch >>]

          steps:
            - run:
                name: Docker Image Build and Push Latest
                command: |
                  DOCKER_IMAGE_NAME="$DOCKER_USER_NAME/slack-waiter-bot"
                  docker build -t $DOCKER_IMAGE_NAME .
                  echo $DOCKER_ACCESS_TOKEN | docker login --username $DOCKER_USER_NAME --password-stdin
                  docker push $DOCKER_IMAGE_NAME
      - when:
          condition:
            matches:
              pattern: ".+"
              value: << pipeline.git.tag >>

          steps:
            - run:
                name: Docker Image Build and Push Tag
                command: |
                  DOCKER_IMAGE_NAME="$DOCKER_USER_NAME/slack-waiter-bot:$CIRCLE_TAG"
                  docker build -t $DOCKER_IMAGE_NAME .
                  echo $DOCKER_ACCESS_TOKEN | docker login --username $DOCKER_USER_NAME --password-stdin
                  docker push $DOCKER_IMAGE_NAME

  go-report-upload:
      executor: go-executor

      steps:
        - run:
            name: Update Go Report
            command: curl -XPOST https://goreportcard.com/checks -F repo="github.com/cosmoquester/slack-waiter-bot"

workflows:
  main:
    jobs:
      - build
      - check-linting
      - run-test
      - docker-image-build:
          context:
            - Docker
          filters:
            tags:
              only: /.+/
            branches:
              only: /master/
      - go-report-upload:
          filters:
            branches:
              only: /master/
